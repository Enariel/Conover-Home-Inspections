@using ConoverHomeInspections.Client.Components
@using ConoverHomeInspections.Client.Services
@using ConoverHomeInspections.Shared
@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="true" Theme="@_theme" />
<MudPopoverProvider />
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
	<NavMenu />
	<CascadingValue Value="@_groups">
		<CascadingValue Value="@_services">
			@if (_currentUri == Nav.BaseUri)
			{
				<HouseCarousel @rendermode="InteractiveServer" />
				<MudMainContent Style="padding-top: initial;">
					@Body
				</MudMainContent>
			}
			else
			{
				<div style="min-height: 90vh;" class="d-flex flex-grow-1">
					<MudContainer MaxWidth="MaxWidth.Large" Class="mud-theme-dark mud-border-primary border-x px-0">
						@Body
					</MudContainer>
				</div>
			}
		</CascadingValue>
	</CascadingValue>
	<Footer />
</MudLayout>

@code {
	private List<ServiceGroupDTO>? _groups;
	private List<ServiceDTO>? _services;
	private MudTheme _theme = AppSettings.GetSiteTheme();
	private string _currentUri;
	[Inject] private ILogger<MainLayout> Logger { get; set; }
	[Inject] private IProductService ProductService { get; set; }
	[Inject] private NavigationManager Nav { get; set; }

	/// <inheritdoc />
	protected override async Task OnInitializedAsync()
	{
		_currentUri = Nav.Uri;
		_groups = await ProductService.GetGroupsAsync();
		_services = await ProductService.GetServicesAsync();
		await base.OnInitializedAsync();
	}
}