@rendermode InteractiveWebAssembly
@page "/Contact"
@using System.ComponentModel.DataAnnotations
<HeadContent>
	<PageTitle>Contact | Conover Home Inspections</PageTitle>
	<meta name="description" content="Get in touch with Conover Home Inspections for all your home inspection needs. Contact us to schedule an inspection or ask any questions.">
	<meta name="keywords" content="home inspections, Conover Home Inspections, book home inspection, home inspection queries, home inspection contact, property inspection, building inspection">
</HeadContent>
<MainHeader Title="Contact" />

<MudCard Elevation="0" Square="true" Class="my-4" @rendermode="InteractiveWebAssembly">
	<MudCardHeader>
		<MudText Color="Color.Primary" Typo="@Typo.h4" Align="Align.Center">Book your inspection now!</MudText>
	</MudCardHeader>
	<MudCardContent>
		<MudContainer MaxWidth="MaxWidth.ExtraLarge">
			<MudForm Model="@_model" @ref="@_form" @bind-IsValid="@_isSuccess" @bind-Errors="@_errors" UserAttributes="@(new Dictionary<string, object>() { { "autocomplete", "off" } })">
				<input autocomplete="false" name="hidden" type="text" style="display:none;">

				<MudGrid>

					<!-- Personal Information -->
					<MudItem xs="12">
						<MudText Typo="@Typo.h5" Color="Color.Secondary" GutterBottom="false">Personal Information</MudText>
						<MudDivider DividerType="DividerType.FullWidth" Class="mud-border-secondary" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.FirstName" For="@(() => _model.FirstName)" Label="First Name" Required="true" RequiredError="First name is required!" MaxLength="255" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.LastName" For="@(() => _model.LastName)" Label="Last Name" Required="true" RequiredError="Last name is required!" MaxLength="255" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.EmailAddress" For="@(() => _model.EmailAddress)" Label="Email Address" Required="true" RequiredError="Email is required!" Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })" InputMode="InputMode.email" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.PhoneNumber" For="@(() => _model.PhoneNumber)" Label="Phone Number" InputMode="InputMode.tel" Mask="@(new PatternMask("000 000 0000"))" MaxLength="10" />
					</MudItem>
					<MudItem xs="12" md="4">
						<MudCheckBox Label="Prefer email correspondences" @bind-Value="@_model.PrefersEmail" For="@(() => _model.PrefersEmail)" />
					</MudItem>
					<MudItem xs="12" md="4">
						<MudCheckBox Label="Allow phone calls" @bind-Value="@_model.PrefersPhone" For="@(() => _model.PrefersPhone)" />
					</MudItem>
					<MudItem xs="12" md="4">
						<MudCheckBox Label="Allow text correspondences" @bind-Value="@_model.PrefersText" For="@(() => _model.PrefersText)" />
					</MudItem>
					<MudItem sm="12">
						<MudGrid>
							<MudItem xs="12">
								<MudText Typo="@Typo.h6" GutterBottom="false">Mailing Address</MudText>
							</MudItem>
							<MudItem xs="12" sm="6" md="8" lg="4">
								<MudTextField @bind-Value="@_model.MailingAddress.Street" For="@(() => _model.MailingAddress.Street)" Label="Street" MaxLength="255" />
							</MudItem>
							<MudItem xs="12" sm="6" md="4" lg="2">
								<MudTextField @bind-Value="@_model.MailingAddress.Street2" For="@(() => _model.MailingAddress.Street2)" Label="Street Ext." MaxLength="128" />
							</MudItem>
							<MudItem xs="12" sm="8" lg="3">
								<MudTextField @bind-Value="@_model.MailingAddress.City" For="@(() => _model.MailingAddress.City)" Label="City" MaxLength="128" />
							</MudItem>
							<MudItem xs="12" sm="4" md="2" lg="1">
								<MudTextField @bind-Value="@_model.MailingAddress.State" For="@(() => _model.MailingAddress.State)" Label="State" MaxLength="2" />
							</MudItem>
							<MudItem xs="12" sm="8" md="2" lg="2">
								<MudNumericField @bind-Value="@_model.MailingAddress.ZipCode" For="@(() => _model.MailingAddress.ZipCode)" Label="Zip" MaxLength="6" />
							</MudItem>
						</MudGrid>
					</MudItem>

					<!-- Inspection Information -->
					<MudItem xs="12">
						<MudText Typo="@Typo.h5" Color="Color.Secondary">Inspection Information</MudText>
						<MudDivider DividerType="DividerType.FullWidth" Class="mud-border-secondary" />
					</MudItem>
					<MudItem xs="12" md="6">
						<MudDateRangePicker Required="true" RequiredError="Please select a desired date range for the inspection." Color="Color.Primary" Square="true" Label="Desired Inspection Date Range" PickerVariant="PickerVariant.Dialog" DateRange="@_dateRange" DateRangeChanged="@(async (e) => await OnRangeChanged(e))" MinDate="@_minDate" MaxDate="@_maxDate" HelperText="@DateHelperText" />
					</MudItem>
					<MudItem xs="12" md="6">
						<MudTextField @bind-Value="@_model.Message" For="@(() => _model.Message)" Label="Message" MaxLength="1000" Lines="3" FullWidth="true" Placeholder="Enter a custom message..." />
					</MudItem>
					<MudItem sm="12">
						<MudGrid>
							<MudItem xs="12">
								<MudText Typo="@Typo.h6" GutterBottom="false">
									Property Address
								</MudText>
							</MudItem>
							<MudItem xs="12" sm="6" md="8" lg="4">
								<MudTextField @bind-Value="@_model.InspectionPropertyAddress.Street" For="@(() => _model.InspectionPropertyAddress.Street)" Label="Street" MaxLength="255" />
							</MudItem>
							<MudItem xs="12" sm="6" md="4" lg="2">
								<MudTextField @bind-Value="@_model.InspectionPropertyAddress.Street2" For="@(() => _model.InspectionPropertyAddress.Street2)" Label="Street Ext." MaxLength="128" />
							</MudItem>
							<MudItem xs="12" sm="8" lg="3">
								<MudTextField @bind-Value="@_model.InspectionPropertyAddress.City" For="@(() => _model.InspectionPropertyAddress.City)" Label="City" MaxLength="128" />
							</MudItem>
							<MudItem xs="12" sm="4" md="2" lg="1">
								<MudTextField @bind-Value="@_model.InspectionPropertyAddress.State" For="@(() => _model.InspectionPropertyAddress.State)" Label="State" MaxLength="2" />
							</MudItem>
							<MudItem xs="12" sm="8" md="2" lg="2">
								<MudNumericField @bind-Value="@_model.InspectionPropertyAddress.ZipCode" For="@(() => _model.InspectionPropertyAddress.ZipCode)" Label="Zip" MaxLength="6" />
							</MudItem>
						</MudGrid>
					</MudItem>

					<!-- Realtor Information -->
					<MudItem xs="12">
						<MudText Typo="@Typo.h5" Color="Color.Secondary" GutterBottom="false">Realtor Information</MudText>
						<MudDivider DividerType="DividerType.FullWidth" Class="mud-border-secondary" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.RealtorFirstName" For="@(() => _model.RealtorFirstName)" Label="Realtor's First Name" MaxLength="128" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.RealtorLastName" For="@(() => _model.RealtorLastName)" Label="Realtor's Last Name" Required="@(!string.IsNullOrEmpty(_model.RealtorFirstName))" MaxLength="128" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.RealtorEmail" For="@(() => _model.RealtorEmail)" Label="Realtor's Email" InputMode="InputMode.email" Required="@(!string.IsNullOrEmpty(_model.RealtorFirstName))" Validation="@(new EmailAddressAttribute() { ErrorMessage = "The email address is invalid" })" />
					</MudItem>
					<MudItem xs="12" md="6" lg="3">
						<MudTextField FullWidth="true" @bind-Value="@_model.RealtorPhone" For="@(() => _model.RealtorPhone)" Label="Realtor's Phone" MaxLength="10" InputMode="InputMode.tel" Mask="@(new PatternMask("000 000 0000"))" Required="@(!string.IsNullOrEmpty(_model.RealtorFirstName) && string.IsNullOrEmpty(_model.RealtorEmail))" />
					</MudItem>

				</MudGrid>
			</MudForm>
		</MudContainer>
	</MudCardContent>

	<MudCardActions Class="d-flex justify-end">
		<MudButton Disabled="@(_isSubmitting)" DisableElevation="true" ButtonType="ButtonType.Button" Variant="Variant.Outlined" Color="Color.Primary" Class="form-button ml-auto" Size="Size.Large" EndIcon="@Icons.Material.Rounded.Send" OnClick="@(async () => await OnFormSubmitAsync())">Submit</MudButton>
	</MudCardActions>
</MudCard>

<style>
	.form-button {
		border-radius: 0;
	}
	.form-button:hover{
		color: var(--mud-palette-white);
		border-radius: 0;
	}
</style>

@code {
	[Parameter, SupplyParameterFromQuery(Name = nameof(GroupId))] public int? GroupId { get; set; }
	[Parameter, SupplyParameterFromQuery(Name = nameof(ServiceId))] public int? ServiceId { get; set; }
}